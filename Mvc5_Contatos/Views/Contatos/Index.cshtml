@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Mvc5_Contatos.Models.ContatoViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Relação de Contatos</h2>

@using(Html.BeginForm("Search", "Contatos", FormMethod.Get))
     {
        @Html.Label("Nome", "Nome")
       <input type="text" name="nome"/>
       <input type="submit" name="submit" value="Procurar"/>
      }

<p>
    @Html.ActionLink("Criar Novo Contato", "Create")
</p>
<table class="table">
    <tr>
        @*<th>
            @Html.DisplayNameFor(model => model.ContatoId)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model[0].Nome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Telefone)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.EnderecoId)
        </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            @*<td>
                @Html.DisplayFor(modelItem => item.ContatoId)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.EnderecoId)
            </td>*@
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ContatoId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ContatoId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ContatoId },
                new { onclick = "return confirm('Desseja realmente deletar este contato ?');" })
            </td>
        </tr>
    }
    <tr>
        <td>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </td>
    </tr>

</table>

<div>
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

    @if (Model.HasPreviousPage)
            {
        @Html.ActionLink("<", "Index", new { pagina = 1 })
        @Html.Raw(" ");
        @Html.ActionLink("[ Anterior", "Index", new {pagina = Model.PageNumber - 1})
            }
            else
            {
                @:<
                @Html.Raw(" ");
                @:< Anterior
            }
    @if (Model.HasNextPage)
            {
                @Html.ActionLink("Próxima ]", "Index", new { pagina = Model.PageNumber + 1})
                @Html.Raw(" ");
                @Html.ActionLink(">", "Index", new { pagina = Model.PageCount})
            }
            else
            {
                @:Próxima >
                @Html.Raw(" ")
                @:>
            }       
</div>
